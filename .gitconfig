; include file sample
; 
; file : ~/.gitconfig
; [user]
;	name = hotjoyit
;	email = hotjoyit@gmail.com
;    signingkey = 1234ABXC
; [commit]
;    gpgsign = true
; [include]
;   path = ~/dotfiles/.gitconfig

[core]
    autocrlf = input
[alias]
    s = status -s
    co = checkout
    ci = commit
    br = branch
    a = "!git diff-select | xargs git add"
    diff-select = "! # add files with fzf preview diffs; \n\
    f() { \
        _height=$(stty size | awk '{print $1}');\
        git diff-info \
        | fzf -m --header \"$(git diff --shortstat)\" --preview \
            \"if [[ {1} == '??' ]]; then cat {3}; else git diff {3}; fi \
            | head -n $_height \
            | pygmentize\" \
        | awk '{print $3}'; \
    }; f"
    diff-info = "! # get diff info;\n\
    fileA=/tmp/git-s-$(uuidgen); \
    fileB=/tmp/git-diff-$(uuidgen); \
    git s | awk '{print $2,$1}' > $fileA; \
    git diff --numstat | awk '{print $3,$1,$2}' > $fileB; \
    join -t' ' -a 1 $fileA $fileB | awk '{print $2, \"(+\"$3 \",-\"$4\")\", $1}' | sed 's/(+,-)/./' | column -t -s' ' ; \
    rm -f $fileA $fileB; \
"
    l = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
    b0 = "!git branch | awk '/^\\*/{print $2}'"
    back = "!git branch backup-`git b0`"

    sync = "!f() { git fetch $1 && git reset --hard $1/$(git b0); }; f"

    bb = "! # Branch tools. Type 'git bb help' ; \n\
        f() { \n\
            if [ $# = 0 ]; then \
                git checkout $(git branch -vv | grep -v '^\\*' | fzf | awk '{print $1}'); \
            elif [ $1 = 'help' ]; then \
                echo 'git bb           : Select and checkout branch'; \
                echo 'git bb c, clean  : Clean all merged branches'; \
                echo 'git bb d, D      : Delete seleted branches(D: force)'; \
                echo 'git bb l, list   : List branches excluding the current branch'; \
                echo 'git bb m, merged : List merged branches excluding the current and master branches'; \
            elif [ $1 = 'd' -o $1 = 'D' ]; then \
                git branch -$1 $(git bb list | fzf -m); \
            elif [ $1 = 'clean' -o $1 = 'c' ]; then \
                git branch -d $(git bb merged); \
            elif [ $1 = 'list' -o $1 = 'l' ]; then \
                git branch | grep -v '^\\*'; \
            elif [ $1 = 'merged' -o $1 = 'm' ]; then \
                git branch --merged | grep -v '^\\*\\|\\<master$'; \
            else \
                git bb help; \
            fi; \
        }; f"

    ch = "!git checkout $(git bselect)"
    bselect = "! # select branch with preview; \n\
        f() { \
            _height=$(stty size | awk '{print $1}');\
            git branch | egrep -v '^\\*' | fzf --preview \"git l {1} | head -n $_height\"; \
        }; f"
